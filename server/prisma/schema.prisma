generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique
  name  String
  password String
  descripton String?
  servers Server[]
  sentMessages   DirectMessage[] @relation("Sender")
  receivedMessages DirectMessage[] @relation("Receiver")
}

model Server {
  id    Int     @default(autoincrement()) @id
  name String
  banner String?
  owner User @relation(fields: [ownerId], references: [id])
  ownerId Int
  channels Channel[]
}

model Channel {
  id    Int     @default(autoincrement()) @id
  name String
  type ChannelType @default(TEXT)
  server Server @relation(fields: [serverId], references: [id])
  serverId Int
  messages Message[]
}

model DirectMessage {
  id Int @default(autoincrement()) @id
  sender User @relation(name: "Sender", fields: [user1Id], references: [id])
  user1Id Int
  receiver User @relation(name: "Receiver", fields: [user2Id], references: [id])
  user2Id Int
  messages Message[]
}

model Message {
  id Int @default(autoincrement()) @id
  type MessageType
  content String
  timestamp DateTime @default(now())

  directMessage DirectMessage? @relation(fields: [directMessageId], references: [id])
  directMessageId Int?

  channel Channel? @relation(fields: [channelId], references: [id])
  channelId Int
}

enum ChannelType {
  TEXT
  VOICE
}

enum MessageType {
  CHANNEL
  DIRECT
}